
#include"bits/stdc++.h"
using namespace std;
#define FIO  ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define ll long long
#define int long long
#define nl "\n"
#define ff first
#define ss second
#define pb push_back
#define w(t) int t; cin >> t; while (t--)
#define deci(n) fixed << setprecision(n)
#define trace1(x)                cerr<<#x<<": "<<x<<endl
#define trace2(x, y)              cerr<<#x<<": "<<x<<" | "<<#y<<": "<<y<<endl
#define trace3(x, y, z)          cerr<<#x<<":" <<x<<" | "<<#y<<": "<<y<<" | "<<#z<<": "<<z<<endl
#define trace4(a, b, c, d)       cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<endl
#define trace5(a, b, c, d, e)    cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<< ": "<<e<<endl
#define trace6(a, b, c, d, e, f) cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<< ": "<<e<<" | "<<#f<<": "<<f<<endl
#define pi 3.1415926535897932384626433832795
// replace int with int32_t
typedef vector<int> vi;
typedef vector<ll> vl;
typedef vector<string> vs;
typedef priority_queue<int, vector<int>, greater<int>> minpq;
typedef priority_queue<int> pq;

const int MOD = 1e9 + 7;
int md = MOD;



int Power(int n, int x) {
	int ans = 1; while (x > 0) {
		if (x & 1) ans = (ans * n) % md;
		n = (n * n) % md; x = x >> 1;
	} return ans;
}

vl fact, inv;

void inverse(ll n)
{	if (n >= inv.size()) {
		ll size = inv.size(); size = size == 0 ? 1 : size;
		inv.resize(n + 1); inv[0] = 1;
		for (ll i = size; i <= n; i++)inv[i] = Power(fact[i], md - 2);
	}
}

void factorial(ll n)
{	if (n >= fact.size()) {
		ll size = fact.size(); size = size == 0 ? 1 : size;
		fact.resize(n + 1); fact[0] = 1; for (ll i = size; i <= n; i++)
			fact[i] = (fact[i - 1] * i) % md;
	}
}

ll ncr(ll n, ll r) { return (((fact[n] * inv[r]) % md) * inv[n - r]) % md; }

vl SieveOfEratosthenes(int n)
{
	bool prime[n + 1];
	memset(prime, true, sizeof(prime));
	for (int p = 2; p * p <= n; p++)
	{	if (prime[p] == true) {
			for (int i = p * p; i <= n; i += p)
				prime[i] = false;
		}
	}

	vl ans; for (int p = 2; p <= n; p++)if (prime[p])ans.pb(p); return ans;
}
vi primeFactors(int n)
{
	vi ans;
	while (n % 2 == 0) {ans.pb(2); n /= 2;}
	for (int i = 3; i * i <= n; i = i + 2) {
		while (n % i == 0) {ans.pb(i); n /= i;}
	}
	if (n > 2)ans.pb(n); return ans;
}


//********************************************** END OF TEMPLATES************************************************//

// TESTDATA:
// 4
// 1 3 5 2
// 2
// 1 3
// 2 4

// 6
// 1 0 3 2 4 6
// 2
// 1 3
// 3 6

vector<int> findmin(int *a, int n, int q, vector<vector<int>>&queries)
{
	vector<vector<int>>pref(n);
	for (int i = 30; i >= 0; i--)
	{
		if (a[0] & (1 << i))
			pref[0].push_back(1);
		else
			pref[0].push_back(0);
	}

	for (int i = 1; i < n; i++)
	{
		for (int j = 30; j >= 0; j--)
		{
			if (a[i] & (1 << j))
			{
				pref[i].push_back(1 + pref[i - 1][30 - j]);
			}
			else
			{
				pref[i].push_back(pref[i - 1][30 - j]);
			}
		}
	}

	vector<int>answer;
	for (vector<int>qq : queries)
	{
		int l = qq[0], r = qq[1];
		l--, r--;
		int maxbits = r - l + 1;
		vector<int>setbits;
		for (int i = 30; i >= 0; i--)
			setbits.push_back(pref[r][30 - i] - (l == 0 ? 0 : pref[l - 1][30 - i]));


		int ans = maxbits;
		for (int i = 30; i >= 0; i--)
		{
			int number = 1 << (30 - i);
			if (number > maxbits)
				break;
			int curr = (maxbits - setbits[i]) * (1 << (30 - i));
			ans = min(ans, curr);
		}

		answer.push_back(ans);
	}
	return answer;
}

int32_t main()
{

	FIO
#ifndef ONLINE_JUDGE
	freopen ("in.txt", "r", stdin);
	freopen ("out.txt", "w", stdout);
#endif

	int n;
	cin >> n;
	int a[n];
	for (int i = 0; i < n; i++)
		cin >> a[i];
	int q;
	cin >> q;
	vector<vector<int>>queries;
	while (q--)
	{
		int l, r;
		cin >> l >> r;
		vector<int>v;
		v.push_back(l); v.push_back(r);
		queries.push_back(v);
	}

	vector<int>ans = findmin(a, n, q, queries);
	for (auto i : ans )
		cout << i << " ";

}



